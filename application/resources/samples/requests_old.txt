php -S localhost:8080 -t public/

https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/curl_examples.html

insert
curl -i -X POST -H "Content-Type:application/json" http://localhost:3000/book -d '{"title":"Test Title","author":"test author","isbn":"12345"}'
curl -i -X POST -H "Content-Type:application/json" http://localhost:3000/secao -d '{"nr_ordem":"1","nm_menu":"Sobre","nm_titulo":"Sobre a empresa","ds_conteudo":"bla bla bla bla","bl_ativa":"1"}'


list
curl -i -X GET -H "Content-Type:application/json" http://localhost:3000/book
curl -i -X GET -H "Content-Type:application/json" http://localhost:3000/secao 

recupera
curl -v -H "Accept:application/json" http://localhost:3000/book/2
curl -v -H "Accept:application/json" http://localhost:3000/secao/1

atualiza
curl -v -H "Content-Type:application/json" -X PUT http://localhost:3000/book/3 -d '{"title":"Test updated title","author":"test upadted author","isbn":"1234567"}'
curl -v -H "Content-Type:application/json" -X PUT http://localhost:3000/secao/2 -d '{"nr_ordem":"1","nm_menu":"Sobre 2","nm_titulo":"Sobre a empresa","ds_conteudo":"bla bla bla bla","bl_ativa":"1"}'

curl --request PUT \
  --url http://localhost:8080/book/3 \
  --header 'api_token: 4321' \
  --header 'Content-Type: application/json' \
  --data '{"title":"Test updated title","author":"test upadted author","isbn":"1234567"}'


curl --request PUT   --url http://localhost:8080/book/3    --header 'api_token: 4321'   --header 'Content-Type: application/json'   --data '{"title":"Test updated title","author":"test upadted author","isbn":"1234567"}'


remove
curl -i -X DELETE http://localhost:8080/book/4

no postman tem que passar no raw como tipo json

login
curl -i -X POST -H "Content-Type:application/json" http://localhost:8080/api/auth/login -d '{"username":"admin@admin.com","password":"1234"}'


logout
curl -i -X POST -H "access_token:cf69230bb0023c40d6ede0958e28fd5e" http://localhost:8080/api/auth/logout 





curl -i -X POST -H "Content-Type:application/json" http://localhost:8080/api/auth/login -d '{"username":"admin@admin.com","password":"1234"}'

curl --request PUT   --url http://localhost:8080/book/3    --header 'api_token: 4321'   --header 'Content-Type: application/json'   --data '{"title":"Test updated title","author":"test upadted author","isbn":"1234567"}'

pendências:
- lançar todas as exceções em JSON
- exceções na autenticação
- autenticação em base64




///////////////////////////////////////////

version: "3"
services:

# php api module
  app:
    # image: php:7
    build: 
      context: .
      dockerfile: dockerfile-app    
    container_name: api_php
    # command: "apt-get update &&  apt-get install telnet -y && docker-php-ext-install pdo pdo_mysql"
# command: supervisord -n && apt-get update && apt-get install yarn
    # command: "php -S 0.0.0.0:8080 -t /app/application/public"    
    # command: "php -S 0.0.0.0:8080 -t app/application/public"        
    volumes:
      - .:/app/
    ports:
      - 3000:8080
    networks:
      - app-network      

# install external libraries with composer
  composer:
    restart: 'no'
    image: composer
    command: install
    working_dir: /app/application    
    volumes:
      - .:/app

# mysql instance
  db:
    container_name: api_db
    restart: always
    # image: mysql:latest
    image: mysql:5.7
    environment:
      MYSQL_ROOT_USER: root 
      MYSQL_ROOT_PASSWORD: root # TODO: Change this
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo
      MYSQL_HOST: 127.0.0.1  # TODO: validar
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    # command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker-init-db/:/docker-entrypoint-initdb.d/
      - my-db-volume:/var/lib/mysql
    networks:
      - app-network      

#extenal volume for database at default docker volumes location
volumes:
  my-db-volume:

#docker networks
networks:
  app-network:
    driver: bridge    

