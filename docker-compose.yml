version: "3"
services:

# php api module
  app:
    # image: php:7
    build: 
      context: .
      dockerfile: dockerfile-app    
    container_name: api_php
    command: "php -S 0.0.0.0:8080 -t /app/application/public"     
    volumes:
      - .:/app/
    ports:
      - 3000:8080
    networks:
      - app-network      

# install external libraries with composer 
  composer:
    restart: 'no'
    image: composer
    command: install --ignore-platform-reqs
    working_dir: /app/application    
    volumes:
      - .:/app

# mysql instance
# You don't should use this instance in production environment. 
# Make changes in `env.` file, redirecting the application to a production mysql service.

  db:
    container_name: api_db
    restart: always
    # image: mysql:latest
    image: mysql:5.7
    environment:
      MYSQL_ROOT_USER: root 
      MYSQL_ROOT_PASSWORD: root # TODO: change this
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo
      MYSQL_HOST: 127.0.0.1  # TODO: review
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    volumes:
      - ./docker-init-db/:/docker-entrypoint-initdb.d/
      - my-db-volume:/var/lib/mysql
    networks:
      - app-network      

#extenal volume for database at default docker volumes location
volumes:
  my-db-volume:

#docker networks
networks:
  app-network:
    driver: bridge